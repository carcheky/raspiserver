services:

  # jellyfin http://localhost:8096
  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: always
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - JELLYFIN_PublishedServerUrl=${DOMAIN}
      - DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel
    volumes:
      - ./volumes/jellyfin-config:/config
      - ./volumes/jellyfin-intros:/media/intros
      - ./volumes/jellyfin-transcode:/media/transcode
      - ${RASPIMEDIA}:/BibliotecaMultimedia:r
    devices:
      - /dev/dri:/dev/dri
    group_add:
      - "105"

  jellystat-db:
    image: postgres:15.2
    container_name: jellystat-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
    volumes:
      - ./volumes/jellystat-db:/var/lib/postgresql/data

  jellystat:
    image: cyfershepard/jellystat:latest
    container_name: jellystat
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      POSTGRES_IP: jellystat-db
      POSTGRES_PORT: 5432
      JWT_SECRET: "my-secret-jwt-key"
      TZ: mytimezone # timezone (ex: Europe/Paris)
    volumes:
      - ./volumes/jellystat-backup:/app/backend/backup-data
    ports:
      - "3000:3000"
    depends_on:
      - jellystat-db

  # # jellyfin http://localhost:8096
  # jellyfin2:
  #   image: linuxserver/jellyfin:latest
  #   container_name: jellyfin2
  #   restart: always
  #   ports:
  #     - 8097:8096
  #     - 8921:8920 #optional
  #     - 7360:7359/udp #optional
  #     - 1901:1900/udp #optional
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TIMEZONE}
  #     - JELLYFIN_PublishedServerUrl=${DOMAIN}
  #     - DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel
  #   volumes:
  #     - ./volumes/jellyfin-config-backup:/config
  #     - ./volumes/jellyfin-intros2:/media/intros
  #     - ./volumes/jellyfin-transcode2:/media/transcode
  #     - ${RASPIMEDIA}:/BibliotecaMultimedia:r
  #   devices:
  #     - /dev/dri:/dev/dri
  #   group_add:
  #     - "105"

  # wizarr http://localhost:5690
  wizarr:
    image: ghcr.io/wizarrrr/wizarr:latest
    container_name: wizarr
    restart: always
    ports:
      - 5690:5690
    volumes:
      - ./volumes/wizarr-database:/data/database
    environment:
      - APP_URL=https://wizarr.${DOMAIN} #URL at which you will access and share 
      - DISABLE_BUILTIN_AUTH=false #Set to true ONLY if you are using another auth provider (Authelia, Authentik, etc)
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE} #Set your timezone here
    depends_on:
      - jellyfin

  # jellyseerr http://localhost:5055
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./volumes/jellyseerr-config:/app/config
    ports:
      - 5055:5055

  # transmission http://localhost:9091
  transmission:
    image: linuxserver/transmission:latest
    container_name: transmission
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - USER=${USER}
      - PASS=${TRANSMISSION_PASSWORD}
    volumes:
      - ./volumes/transmission-config:/config
      - ${RASPIMEDIA}:/BibliotecaMultimedia
    ports:
      - 9091:9091

  # transmission http://localhost:6880
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
      - DOCKER_MODS=linuxserver/mods:universal-cloudflared
    volumes:
      - ./volumes/qbittorrent-config:/config
      - ${RASPIMEDIA}:/BibliotecaMultimedia
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp

  # prowlarr http://localhost:9696
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./volumes/prowlarr-config:/config
    ports:
      - 9696:9696

  # radarr http://localhost:7878
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./volumes/radarr-config:/config
      - ${RASPIMEDIA}:/BibliotecaMultimedia
    ports:
      - 7878:7878

  # sonarr http://localhost:8989
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./volumes/sonarr-config:/config
      - ${RASPIMEDIA}:/BibliotecaMultimedia
    ports:
      - 8989:8989

  # bazarr http://localhost:6767
  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./volumes/bazarr-config:/config
      - ${RASPIMEDIA}:/BibliotecaMultimedia
    ports:
      - 6767:6767

  janitorr:
    container_name: janitorr
    # image: ghcr.io/schaka/janitorr:native
    image: ghcr.io/schaka/janitorr:latest
    volumes:
      - ./volumes/janitorr-config/:/config
      # - ./volumes/janitorr-config/application.yml:/workspace/application.yml #native
      - ${RASPIMEDIA}:/BibliotecaMultimedia
    ports:
      - 8978:8978
    restart: always

  # bazarr http://localhost:6767
  recyclarr:
    image: ghcr.io/recyclarr/recyclarr
    container_name: recyclarr
    user: ${PUID}:${PGID}
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - CRON_SCHEDULE?"@daily"
      - RECYCLARR_CREATE_CONFIG=true
    volumes:
      - ./volumes/recyclarr-config:/config

# # lidarr http://localhost:8686
#   lidarr:
#     image: linuxserver/lidarr:latest
#     container_name: lidarr
#     restart: always
#     environment:
#       - PUID=${PUID}
#       - PGID=${PGID}
#       - TZ=${TIMEZONE}
#     volumes:
#       - ./volumes/lidarr-config:/config
#       - ${RASPIMEDIA}:/BibliotecaMultimedia
#     ports:
#       - 8686:8686

# # readarr http://localhost:8787
#   readarr:
#     image: linuxserver/readarr:nightly
#     container_name: readarr
#     restart: always
#     environment:
#       - PUID=${PUID}
#       - PGID=${PGID}
#       - TZ=${TIMEZONE}
#     volumes:
#       - ./volumes/readarr-config:/config
#       - ${RASPIMEDIA}:/BibliotecaMultimedia
#     ports:
#       - 8787:8787
