services:

  # SERVIDOR DE MEDIOS
  
  # jellyfin http://localhost:8096
  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: always
    ports:
      - 8096:8096 # access port
      # - 8920:8920 # access port
      # - 7359:7359/udp # optional
      # - 1900:1900/udp # optional
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - JELLYFIN_PublishedServerUrl=${DOMAIN}
      - DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel
      - JELLYFIN_FFmpeg__probesize=1G
      - JELLYFIN_FFmpeg__analyzeduration=500M
    volumes:
      - ./volumes/jellyfin-config:/config
      - ${RASPIMEDIA}:/BibliotecaMultimedia:rw
    devices:
      - /dev/dri:/dev/dri
    group_add:
      - "105"
    deploy:
      resources:
        reservations:
          cpus: '1'
          memory: 2G
        limits:
          cpus: '2'
          memory: 5G


  # ESTADÍSTICAS

  jellystat-db:
    image: postgres:15.2
    container_name: jellystat-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
    volumes:
      - ./volumes/jellystat-db:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M


  jellystat:
    image: cyfershepard/jellystat:latest
    container_name: jellystat
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      POSTGRES_IP: jellystat-db
      POSTGRES_PORT: 5432
      JWT_SECRET: "my-secret-jwt-key"
      TZ: mytimezone # timezone (ex: Europe/Paris)
    volumes:
      - ./volumes/jellystat-backup:/app/backend/backup-data
    ports:
      - "3002:3000"
    depends_on:
      - jellystat-db
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M



  # INVITACIONES

  # # wizarr http://localhost:5690
  # wizarr:
  #   image: ghcr.io/wizarrrr/wizarr:latest
  #   container_name: wizarr
  #   restart: always
  #   ports:
  #     - 5690:5690
  #   volumes:
  #     - ./volumes/wizarr-database:/data/database
  #   environment:
  #     - APP_URL=https://wizarr.${DOMAIN} #URL at which you will access and share 
  #     - DISABLE_BUILTIN_AUTH=false #Set to true ONLY if you are using another auth provider (Authelia, Authentik, etc)
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TIMEZONE} #Set your timezone here
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.50'
  #         memory: 512M



  # PETICIONES

  # jellyseerr http://localhost:5055
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./volumes/jellyseerr-config:/app/config
    ports:
      - 5055:5055
    deploy:
      resources:
        limits:
          memory: 512M


  # TORRENTS

  qbitorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ./volumes/qbittorrent-config:/config:rw
      - ${RASPIMEDIA}:/BibliotecaMultimedia:rw
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G



  # transmission http://localhost:9091
  # transmission:
  #   image: linuxserver/transmission:4.0.5
  #   container_name: transmission
  #   restart: always
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TIMEZONE}
  #     - USER=${USER}
  #     - PASS=${TRANSMISSION_PASSWORD}
  #   volumes:
  #     - ./volumes/transmission-config:/config
  #     - ${RASPIMEDIA}:/BibliotecaMultimedia
  #   ports:
  #     - 9091:9091
  #     - 9093:9091


  # INDEXADOR TORRENTS

  # prowlarr http://localhost:9696
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./volumes/prowlarr-config:/config
    ports:
      - 9696:9696
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M



  # BUSCADOR PELICULAS

  # radarr http://localhost:7878
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - UMASK=${UMASK}
    volumes:
      - ./volumes/radarr-config:/config
      - ${RASPIMEDIA}:/BibliotecaMultimedia
      - ./volumes/radarr-custom-services.d:/custom-services.d
      - ./radarr-arr-scripts:/custom-cont-init.d
      - ./flags:/flags:rw
    ports:
      - 7878:7878
    deploy:
      resources:
        limits:
          cpus: '0.80'
          memory: 1G


  
  # BUSCADOR SERIES
  
  # sonarr http://localhost:8989
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}    
      - UMASK=${UMASK}
    volumes:
      - ./volumes/sonarr-config:/config
      - ${RASPIMEDIA}:/BibliotecaMultimedia
      - ./volumes/sonarr-custom-services.d:/custom-services.d
      - ./sonarr-arr-scripts:/custom-cont-init.d
      - ./flags:/flags:rw
      - ./volumes/jellyfin-config/:/jellyfin-config:rw
    ports:
      - 8989:8989
    deploy:
      resources:
        limits:
          cpus: '0.80'
          memory: 1G



  # SUBTÍTULOS

  # bazarr http://localhost:6767
  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./volumes/bazarr-config:/config
      - ${RASPIMEDIA}:/BibliotecaMultimedia
    ports:
      - 6767:6767
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M



  # BUSCADOR MÚSICA

  # # lidarr http://localhost:8686
  # lidarr:
  #   image: linuxserver/lidarr:latest
  #   container_name: lidarr
  #   restart: always
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TIMEZONE}
  #   volumes:
  #     - ./volumes/lidarr-config:/config
  #     - ${RASPIMEDIA}:/BibliotecaMultimedia
  #   ports:
  #     - 8686:8686
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.50'
  #         memory: 512M



  # # BUSCADOR LIBROS
  
  # # readarr http://localhost:8787
  # readarr:
  #   image: linuxserver/readarr:nightly
  #   container_name: readarr
  #   restart: always
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TIMEZONE}
  #   volumes:
  #     - ./volumes/readarr-config:/config
  #     - ${RASPIMEDIA}:/BibliotecaMultimedia
  #   ports:
  #     - 8787:8787
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.50'
  #         memory: 512M



  # OTROS
  # https://github.com/Schaka/janitorr
  # janitorr:
  #   container_name: janitorr
  #   restart: always
  #   user: ${PUID}:${PGID}
  #   volumes:
  #     - ./volumes/janitorr-config/:/config
  #     - ./volumes/janitorr-logs:/logs
  #     - ${RASPIMEDIA}:/BibliotecaMultimedia
  #   environment:
  #     - LANG=es_ES.UTF-8
  #     - LANGUAGE=es_ES:es
  #     # - LC_ALL=es_ES.UTF-8
  #   # modo 1
  #   image: ghcr.io/schaka/janitorr:develop
  #   healthcheck:
  #     test: "wget -T5 -qO- http://localhost:8081/health | grep UP || exit 1"
  #     start_period: 30s
  #     interval: 5s
  #     retries: 3
    # fin modo 1
    # # modo 2
    # image: ghcr.io/schaka/janitorr:native-stable
    # environment:
    #   # Uses https://github.com/dmikusa/tiny-health-checker supplied by paketo buildpacks
    #   - THC_PATH=/health
    #   - THC_PORT=8081
    # healthcheck:
    #   test: [ "CMD", "/workspace/health-check" ]
    #   start_period: 30s
    #   interval: 5s
    #   retries: 3
    # fin modo 2

  # # https://docs.linuxserver.io/images/docker-mylar3/
  # mylar3:
  #   image: lscr.io/linuxserver/mylar3:latest
  #   container_name: mylar3
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TIMEZONE}
  #   volumes:
  #     - ./volumes/mylar3-config:/config
  #     - ${RASPIMEDIA}:/BibliotecaMultimedia
  #   ports:
  #     - 8090:8090
  #   restart: always