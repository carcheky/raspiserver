# Loads default set of integrations. Do not remove.
# This integration
# is a meta-component and configures a default set of integrations for Home Assistant to load. The 
# integrations that will be loaded are:
# https://www.home-assistant.io/integrations/default_config/
default_config:

# http integration
# The http integration serves all files and data required for the Home Assistant frontend.
# You only need to add this to your configuration file if you want to change any of the default settings.
# https://www.home-assistant.io/integrations/http/
http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 127.0.0.1
    - 192.168.68.201
    - 0.0.0.0/0
    - ::1
# The api integration exposes a RESTful API and allows one to interact with a Home Assistant instance that 
# is running headless. This integration depends on the HTTP integration.
api:

# The Home Assistant integration provides generic implementations like the generic homeassistant.turn_on.
homeassistant:
  name: Redgraciados
  unit_system: metric
  currency: EUR
  country: ES
  time_zone: "Europe/Madrid"
  external_url: !secret external_url
  internal_url: !secret internal_url

# While this integration is part of default_config: to enable automatic discovery of the Bluetooth Adapter, it will only be enabled by setting up the configuration flow, or manually adding it to your configuration.yaml.
bluetooth:

# INCLUDES
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

# This offers the official frontend to control Home Assistant. This integration is enabled by default 
# unless youâ€™ve disabled or removed the default_config: line from your configuration. If that is the 
# case, the following example shows you how to enable this integration manually:
frontend:
  themes: !include_dir_merge_named themes

# Text-to-speech (TTS) enables Home Assistant to speak to you.
tts:
  - platform: google_translate

# The google_assistant integration allows you to control your Home Assistant devices via Google Assistant 
# on your mobile, tablet, or Google Home device.
google_assistant:
  project_id: home-assistant-raspiserver
  service_account: !include SERVICE_ACCOUNT.JSON
  report_state: true
  expose_by_default: true
  exposed_domains:
    - light
    - switch
    - vacuum
    - group
    # - scene

# The ZHA (Zigbee Home Automation) integration allows you to wirelessly connect many off-the-shelf 
# Zigbee-based devices directly to Home Assistant, using one of the many available Zigbee coordinators.
zha:
  custom_quirks_path: /config/custom_zha_quirks
  database_path: /config/zigbee.db 
  enable_quirks: true

# wake on lan integration
switch:
  - platform: wake_on_lan
    mac: !secret wake_on_lan_mac_pcck
    name: Wake PCCK 

# logbook:

# order debug logger
#     critical
#     fatal
#     error
#     warning
#     warn
#     info
#     debug
#     notset
logger:
  default: warn
  # logs:
  #   homeassistant.setup: debug
    # homeassistant.components.proximity: debug
    # homeassistant.components.automation: warn
  #   aemet_opendata.interface: debug
  #   homeassistant.components.google_assistant: info
  #   Jellyfin: error
  #   async_upnp_client: error
  #   custom_components: critical
  #   homeassistant.core: critical
  #   homeassistant.loader: critical
  #   aemet_opendata: critical
  #   homeassistant.components.websocket_api: critical
  #   bellows: critical
  #   bleak: critical
  #   homeassistant.components.recorder: critical
  #   homeassistant.components.http: critical
  #   homeassistant.components.bluetooth: critical
  #   async_upnp_client: critical
  #   custom_components.cloudflare_tunnel_monitor: critical