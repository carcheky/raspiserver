# Generated by docker-gen
# DO NOT EDIT MANUALLY

{{ $domains := split (or ($.Env.RASPISERVER_DOMAINS) "localhost") "," }}

{{ range $container := $ }}
  {{ if $container.Env.RASPISERVER_ENABLE }}
    {{ $subdomain := coalesce $container.Env.RASPISERVER_SUBDOMAIN $container.Name }}
    {{ $port := coalesce $container.Env.RASPISERVER_PORT "80" }}
    {{ $protocol := coalesce $container.Env.RASPISERVER_PROTOCOL "http" }}
    
    {{ range $domain := $domains }}
      {{ $clean_domain := trim $domain }}
      {{ $full_domain := printf "%s.%s" $subdomain $clean_domain }}
      {{ $upstream_name := printf "%s_%s" $container.Name (replace $clean_domain "." "_" -1) }}

# Upstream for {{ $container.Name }} on {{ $full_domain }}
upstream {{ $upstream_name }} {
    server {{ $container.Name }}:{{ $port }};
}

# Server for {{ $full_domain }}
server {
    listen 80;
    server_name {{ $full_domain }};
    
    client_max_body_size {{ coalesce $container.Env.RASPISERVER_MAX_BODY_SIZE "100M" }};
    
    location / {
        proxy_pass {{ $protocol }}://{{ $upstream_name }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support
        {{ if eq $container.Env.RASPISERVER_WEBSOCKET "true" }}
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
        {{ end }}
    }
}

    {{ end }}
  {{ end }}
{{ end }}

# Default server (catch-all)
server {
    listen 80 default_server;
    server_name _;
    return 444; # Close connection without response
}
