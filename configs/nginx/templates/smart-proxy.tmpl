# Generated by docker-gen - Smart Auto Configuration
# DO NOT EDIT MANUALLY

{{ $domains := split (or ($.Env.PROXY_DOMAINS) "localhost") "," }}

{{ range $container := $ }}
  {{ if and $container.Env.PROXY_ENABLE (or $container.Env.PROXY_PORT (index $container.Addresses 0)) }}
    {{ $name := coalesce $container.Env.PROXY_NAME $container.Name }}
    {{ $port := coalesce $container.Env.PROXY_PORT (index $container.Addresses 0).Port }}
    
    {{ range $domain := $domains }}
      {{ $clean_domain := trim $domain }}

# ================================================================
# Service: {{ $name }} on {{ $clean_domain }}
# ================================================================

# Upstream
upstream {{ $name }}_{{ replace $clean_domain "." "_" -1 }} {
    server {{ $container.Name }}:{{ $port }};
}

# Subdominio: {{ $name }}.{{ $clean_domain }}
server {
    listen 80;
    server_name {{ $name }}.{{ $clean_domain }};
    
    location / {
        proxy_pass http://{{ $name }}_{{ replace $clean_domain "." "_" -1 }};
        include /etc/nginx/proxy_params;
        
        {{ if eq $container.Env.PROXY_WEBSOCKET "true" }}
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        {{ end }}
    }
}

# Ruta: {{ $clean_domain }}/{{ $name }}
server {
    listen 80;
    server_name {{ $clean_domain }};
    
    location /{{ $name }}/ {
        proxy_pass http://{{ $name }}_{{ replace $clean_domain "." "_" -1 }}/;
        include /etc/nginx/proxy_params;
        
        # Rewrite para manejar rutas internas
        proxy_set_header X-Forwarded-Prefix /{{ $name }};
        
        {{ if eq $container.Env.PROXY_WEBSOCKET "true" }}
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        {{ end }}
    }
    
    # Redirect sin trailing slash
    location = /{{ $name }} {
        return 301 $scheme://$host/{{ $name }}/;
    }
}

    {{ end }}
  {{ end }}
{{ end }}

# Default server
server {
    listen 80 default_server;
    server_name _;
    
    location / {
        return 200 "RaspiServer Auto-Proxy\nServices available:\n{{ range $container := $ }}{{ if $container.Env.PROXY_ENABLE }}{{ range $domain := split (or ($.Env.PROXY_DOMAINS) "localhost") "," }}- {{ coalesce $container.Env.PROXY_NAME $container.Name }}.{{ trim $domain }}\n- {{ trim $domain }}/{{ coalesce $container.Env.PROXY_NAME $container.Name }}\n{{ end }}{{ end }}{{ end }}";
        add_header Content-Type text/plain;
    }
}
