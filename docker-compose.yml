services:

  swag:
    image: linuxserver/swag:latest
    container_name: swag
    restart: always
    privileged: true
    network_mode: host
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - URL=${DOMAIN}
      - VALIDATION=http
      - EMAIL=${EMAIL}
      - ONLY_SUBDOMAINS=true
      - STAGING=false
      - SUBDOMAINS=r,ha,jellyfin,prowlarr,sonarr,radarr,bazarr,transmission,jellyseerr,wizarr,pihole
    volumes:
      - "${RASPICONFIG}/swag/:/config"
      - ./configs/nginx/:/config/nginx/proxy-confs/

# homarr http://localhost:7575
  homarr:
    image: ghcr.io/ajnart/homarr:latest
    container_name: homarr
    restart: always
    environment:
      - PASSWORD=${PASSWORD}
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${RASPICONFIG}/homarr/config:/app/data/configs
    ports:
      - '7575:7575'

# homeassistant http://localhost:8123
  homeassistant:
    image: "homeassistant/home-assistant:stable"
    container_name: homeassistant
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${RASPICONFIG}/homeassistant/config:/config
      - ${RASPIMEDIA}:/media/RASPIMEDIA
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro # bluethooth
    network_mode: host
    privileged: true
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"

# jellyfin http://localhost:8096
  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - JELLYFIN_PublishedServerUrl=jellyfin.${DOMAIN}
    volumes:
      - ${RASPICONFIG}/jellyfin/config:/config
      - ${RASPIMEDIA}/BibliotecaMultimedia:/BibliotecaMultimedia
    ports:
      - 8096:8096
    devices:
      - /dev/video10:/dev/video10
      - /dev/video11:/dev/video11
      - /dev/video12:/dev/video12

# wizarr http://localhost:5690
  wizarr:
    image: ghcr.io/wizarrrr/wizarr:latest
    container_name: wizarr
    restart: always
    user: 1000:1000 #Optional but recommended, sets the user uid that Wizarr will run with
    ports:
      - 5690:5690
    volumes:
      - ${RASPICONFIG}/wizarr/database:/data/database
    environment:
      - APP_URL=https://wizarr.${DOMAIN} #URL at which you will access and share 
      - DISABLE_BUILTIN_AUTH=false #Set to true ONLY if you are using another auth provider (Authelia, Authentik, etc)
      - TZ=Europe/Madrid #Set your timezone here
    depends_on:
      - jellyfin

# jellyseerr http://localhost:5055
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${RASPICONFIG}/jellyseerr/config:/app/config
    ports:
      - 5055:5055

# transmission http://localhost:9091
  transmission:
    image: linuxserver/transmission:latest
    container_name: transmission
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - USER=${USER}
      - PASS=${TRANSMISSION_PASSWORD}
    volumes:
      - ${RASPICONFIG}/transmission/config:/config
      - ${RASPIMEDIA}/BibliotecaMultimedia:/BibliotecaMultimedia
    ports:
      - 9091:9091

# prowlarr http://localhost:9696
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${RASPICONFIG}/prowlarr/config:/config
    ports:
      - 9696:9696

# radarr http://localhost:7878
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${RASPICONFIG}/radarr/config:/config
      - ${RASPIMEDIA}/BibliotecaMultimedia:/BibliotecaMultimedia
    ports:
      - 7878:7878
  
# sonarr http://localhost:8989
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${RASPICONFIG}/sonarr/config:/config
      - ${RASPIMEDIA}/BibliotecaMultimedia:/BibliotecaMultimedia
    ports:
      - 8989:8989

# bazarr http://localhost:6767
  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${RASPICONFIG}/bazarr/config:/config
      - ${RASPIMEDIA}/BibliotecaMultimedia:/BibliotecaMultimedia
    ports:
      - 6767:6767

# pihole http://localhost:53
  pihole:
  # More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
    image: pihole/pihole:latest
    container_name: pihole
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "8080:80/tcp"
    environment:
      TZ: 'Europe/Madrid'
      WEBPASSWORD: ${PASSWORD}
    # Volumes store your data between container upgrades
    volumes:
      - '${RASPICONFIG}/pihole/etc-pihole:/etc/pihole'
      - '${RASPICONFIG}/pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: always