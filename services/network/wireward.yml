services:
  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE #optional
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - SERVERURL=${WIREGUARD_SERVERURL:-wireguard.mediacheky.es} #optional
      - SERVERPORT=${WIREGUARD_SERVERPORT:-51820} #optional
      - PEERS=${WIREGUARD_PEERS:-1} #optional
      - PEERDNS=${WIREGUARD_PEERDNS:-auto} #optional
      - INTERNAL_SUBNET=${WIREGUARD_INTERNAL_SUBNET:-10.13.13.0} #optional
      - ALLOWEDIPS=${WIREGUARD_ALLOWEDIPS:-0.0.0.0/0} #optional
      - PERSISTENTKEEPALIVE_PEERS=${WIREGUARD_PERSISTENTKEEPALIVE:-} #optional
      - LOG_CONFS=${WIREGUARD_LOG_CONFS:-true} #optional
    volumes:
      - ${VOLUMES_DIR}/wireguard-config:/config
      - ${VOLUMES_DIR}/wireguard-modules:/lib/modules #optional
    ports:
      - ${WIREGUARD_PORT:-51820}:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    healthcheck:
      test: ["CMD", "wg", "show"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "raspiserver.category=vpn-server"
      - "raspiserver.description=WireGuard VPN server for secure remote access"
